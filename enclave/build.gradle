configurations {
  tessera.extendsFrom integrationTestRuntimeOnly
}
dependencies {
  api project(':util')
  api project(':crypto')
  api 'org.slf4j:slf4j-api'

  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'com.google.guava:guava'
  implementation 'io.vertx:vertx-core'
  implementation 'io.vertx:vertx-web'
  implementation 'org.apache.tuweni:tuweni-net'

  runtimeOnly('org.bouncycastle:bcpkix-jdk15on')

  // test dependencies.
  testImplementation project(':testutil')

  testImplementation 'junit:junit'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.junit.jupiter:junit-jupiter'

  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'

  // integration test dependencies.
  integrationTestImplementation project(':testutil')
  integrationTestImplementation 'org.assertj:assertj-core'
  integrationTestImplementation 'org.bouncycastle:bcpkix-jdk15on'
  integrationTestImplementation 'org.awaitility:awaitility'
  integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api'
  integrationTestImplementation 'org.mockito:mockito-core'
  integrationTestImplementation 'org.testcontainers:testcontainers'

  integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter'
  tessera 'net.consensys.quorum.tessera:tessera-dist:22.1.7@tar'
}

def tesseraDist = '22.1.7'
integrationTest {
  useJUnitPlatform()
  systemProperty "tessera-dist", "${buildDir}/tessera/dist/tessera-${tesseraDist}/bin/tessera"
}
task copyDependencies(type: Copy) {
  def outputDir = file("${buildDir}/tessera/dist")
  from configurations.tessera
  into outputDir
}
task unzipTessera(type: Copy) {
  def zipFile = file("${buildDir}/tessera/dist/tessera-dist-${tesseraDist}.tar")
  def outputDir = file("${buildDir}/tessera/dist")
  from tarTree(zipFile)
  into outputDir
}
unzipTessera.dependsOn copyDependencies
integrationTest.dependsOn unzipTessera
