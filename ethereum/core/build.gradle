/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

apply plugin: 'java-library'

jar {
  archiveBaseName = 'besu-core'
  manifest {
    attributes(
      'Specification-Title': archiveBaseName,
      'Specification-Version': project.version,
      'Implementation-Title': archiveBaseName,
      'Implementation-Version': calculateVersion()
      )
  }
}

dependencies {
  api 'org.slf4j:slf4j-api'

  annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess'

  implementation project(':config')
  implementation project(':crypto')
  implementation project(':datatypes')
  implementation project(':enclave')
  implementation project(':ethereum:rlp')
  implementation project(':ethereum:trie')
  implementation project(':evm')
  implementation project(':metrics:core')
  implementation project(':plugin-api')
  implementation project(':services:kvstore')

  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'com.google.guava:guava'
  implementation 'io.opentelemetry:opentelemetry-api'
  implementation 'io.vertx:vertx-core'
  implementation 'net.java.dev.jna:jna'
  implementation 'org.apache.tuweni:tuweni-bytes'
  implementation 'org.apache.tuweni:tuweni-concurrent'
  implementation 'org.apache.tuweni:tuweni-units'
  implementation 'org.apache.tuweni:tuweni-rlp'
  implementation 'org.hyperledger.besu:bls12-381'
  implementation 'org.immutables:value-annotations'

  implementation 'org.xerial.snappy:snappy-java'

  annotationProcessor 'org.immutables:value'

  testImplementation project(path: ':config', configuration: 'testSupportArtifacts')
  testImplementation project(path: ':ethereum:api')
  testImplementation project(path: ':ethereum:referencetests')
  testImplementation project(':testutil')

  testImplementation 'junit:junit'
  testImplementation 'org.apache.logging.log4j:log4j-core'
  testImplementation 'org.apache.tuweni:tuweni-bytes'
  testImplementation 'org.apache.tuweni:tuweni-io'
  testImplementation 'org.apache.tuweni:tuweni-units'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation 'org.junit.jupiter:junit-jupiter-params'
  testImplementation 'org.mockito:mockito-core'

  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'

  integrationTestImplementation project(path: ':config', configuration: 'testSupportArtifacts')
  integrationTestImplementation project(':testutil')

  integrationTestImplementation 'org.assertj:assertj-core'
  integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api'
  integrationTestImplementation 'org.mockito:mockito-core'
  integrationTestImplementation 'org.testcontainers:testcontainers'

  integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter'

  testSupportImplementation project(path: ':config', configuration: 'testSupportArtifacts')
  testSupportImplementation project(':ethereum:eth')
  testSupportImplementation project(':testutil')

  testSupportImplementation 'junit:junit'
  testSupportImplementation 'org.assertj:assertj-core'
  testSupportImplementation 'org.mockito:mockito-core'

  jmhImplementation project(path: ':config', configuration: 'testSupportArtifacts')
  jmhImplementation project(':crypto')
  jmhImplementation project(path: ':ethereum:core', configuration: 'testSupportArtifacts')
  jmhImplementation project(':ethereum:rlp')
  jmhImplementation project(':ethereum:trie')
  jmhImplementation project(':metrics:core')
  jmhImplementation project(':plugin-api')
  jmhImplementation project(':plugins:rocksdb')
  jmhImplementation project(':services:kvstore')
  jmhImplementation project(':util')

  jmhImplementation 'com.google.guava:guava'
}

configurations { testArtifacts }
task testJar(type: Jar) {
  archiveBaseName = "${project.name}-test"
  from sourceSets.test.output
}

artifacts {
  testArtifacts testJar
  testSupportArtifacts testSupportJar
}
