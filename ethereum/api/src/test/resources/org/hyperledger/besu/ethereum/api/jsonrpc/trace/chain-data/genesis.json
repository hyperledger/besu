{
  "config": {
    "homesteadBlock": 0,
    "daoForkBlock": 0,
    "eip150Block": 0,
    "eip155Block": 0,
    "eip158Block": 0,
    "eip160Block": 0,
    "byzantiumBlock": 0,
    "constantinopleBlock": 0,
    "constantinopleFixBlock": 0,
    "ethash": {
      "fixeddifficulty": 15
    },
    "chainID": 1982,
    "networkID": 1982
  },
  "nonce": "0x0000000000000042",
  "gasLimit": "0x100000000000",
  "difficulty": "0xf",
  "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
  "coinbase": "0x0000000000000000000000000000000000000000",
  "alloc": {
    "0010000000000000000000000000000000000000": {
      "comment": "Add smart contract that will simply set 2 key-value pairs.  Parses tx input into 4 32 byte values: [key1, val1, key2, val2]. Can be used to test constantinople fix.",
      "code": "0x6020356000355560603560403555600000",
      "balance": "0x0"
    },
    "0020000000000000000000000000000000000000": {
      "comment": "Reads a single address from tx input, self-destructs and sends refund to input address.",
      "code": "0x600035FF",
      "balance": "0x300"
    },
    "0030000000000000000000000000000000000000": {
      "comment": "Reads a 32 byte value from input data, increments it, and returns.",
      "code": "0x60003560010160005260206000F3",
      "balance": "0x0"
    },
    "0040000000000000000000000000000000000000": {
      "comment": "Proxy a call to the address in the first 32 bytes, sending the rest of the input data to this address. Return 32 bytes from sub-call.",
      "comment": "0x outSize 6020 outOffset 6000 inputSize 60203603 inputToMem(dupSize 80)6020600037 inOffset 6000 val 34 to 600035 gas 5A call F1 Return 60206000F3",
      "code": "0x60206000602036038060206000376000346000355AF160206000F3",
      "balance": "0x0"
    },
    "0050000000000000000000000000000000000000": {
      "comment": "Add smart contract that will simply set 2 key-value pairs.  Parses tx input into 4 32 byte values: [key1, val1, key2, val2]. Can be used to test constantinople fix. (no explicit stop)",
      "code": "0x60203560003555606035604035556000",
      "balance": "0x0"
    },
    "fe3b557e8fb62b89f4916b721be55ceb828dbd73": {
      "secretKey": "8f2a55949038a9610f50fb23b5883af3b4ecb3c3bb792cbcefbd1542c692be63",
      "comment": "private key and this comment are ignored.  In a real chain, the private key should NOT be stored",
      "balance": "0xf0000000000000000000000000000000000000000"
    },
    "627306090abaB3A6e1400e9345bC60c78a8BEf57": {
      "secretKey": "c87509a1c067bbde78beb793e6fa76530b6382a4c0241e5e4a9ec0a0f44dc0d3",
      "comment": "private key and this comment are ignored.  In a real chain, the private key should NOT be stored",
      "balance": "0xf0000000000000000000000"
    },
    "f17f52151EbEF6C7334FAD080c5704D77216b732": {
      "secretKey": "ae6ae8e5ccbfb04590405997ee2d52d2b330726137b875053c36d94e974d162f",
      "comment": "private key and this comment are ignored.  In a real chain, the private key should NOT be stored",
      "balance": "0xf0000000000000000000000"
    }
  }
}
