name: integration-tests
on:
  workflow_dispatch:
  workflow_call:
  pull_request_review:
    types:
      - submitted

env:
  GRADLE_OPTS: "-Xmx6g -Dorg.gradle.daemon=false"

jobs:
  pend:
    name: integration testing pending
    runs-on: ubuntu-22.04
    if: ${{ github.actor != 'dependabot[bot]' && github.event.review.state == 'approved' }}
    permissions:
      statuses: write
    steps:
      - name: pending
        uses: myrotvorets/set-commit-status-action@v2.0.0
        with:
          status: pending
          sha: ${{github.pull_request.head.sha}}
  integrationTest:
    runs-on: ubuntu-22.04
    permissions:
      statuses: write
    if: ${{ github.actor != 'dependabot[bot]' && github.event.review.state == 'approved' }}
    steps:
      - name: already tested
        id: needsRun
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const { data: { statuses } } = await github.rest.repos.getCombinedStatusForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
            });
            const integrationTested = statuses.find(({ context }) => context === 'integration-tests');
            const needsRun = integrationTested.find(({ state }) => state != 'success' && state != 'pending');
            return needsRun
      - name: Checkout Repo
        if: steps.needsRun.outputs.result == 'true'
        uses: actions/checkout@v3
      - name: Set up Java
        if: steps.needsRun.outputs.result == 'true'
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
      - name: setup gradle
        if: steps.needsRun.outputs.result == 'true'
        uses: gradle/gradle-build-action@v2
      - name: run integration tests
        if: steps.needsRun.outputs.result == 'true'
        run: ./gradlew integrationTest -Dorg.gradle.parallel=true -Dorg.gradle.caching=true
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: (success() || failure()) && steps.needsRun.outputs.result == 'true'
        with:
          report_paths: '**/build/test-results/integrationTest/TEST-*.xml'


