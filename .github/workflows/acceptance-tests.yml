name: acceptance-tests
on:
  workflow_dispatch:
  workflow_call:
  pull_request_review:
    types: [submitted]

env:
  GRADLE_OPTS: "-Xmx6g -Dorg.gradle.daemon=false"
  total-runners: 16

jobs:
  shouldRun:
    name: checks to ensure we should run
    runs-on: ubuntu-22.04
    outputs:
      shouldRun: ${{steps.shouldRun.outputs.result}}
    steps:
      - name: required check
        id: shouldRun
        uses: actions/github-script@v7.0.1
        env:
          # fun fact, this changes based on incoming event, it will be different when we run this on pushes to main
          RELEVANT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
        with:
          script: |
            const { RELEVANT_SHA } = process.env;
            const { data: { statuses } } = await github.rest.repos.getCombinedStatusForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: RELEVANT_SHA,
            });
            const unitTested = statuses && statuses.filter(({ context }) => context === 'pre-review');
            const failedUnits = unitTested && unitTested.filter(({state}) => state === 'failure' || state === 'pending');
            const acceptanceTested = statuses && statuses.filter(({ context }) => context === 'acceptance-tests');
            const alreadyRun = acceptanceTested && acceptanceTested.find(({ state }) => state === 'success' || state === 'pending') > 0;
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            const approvingReviews = reviews && reviews.filter(review => review.state === 'APPROVED');
            const shouldRun = !alreadyRun && github.actor != 'dependabot[bot]' && (failedUnits.length === 0) && (approvingReviews.length > 0);
            
              console.log("tests should be run = %j", shouldRun);
              console.log("alreadyRun = %j", alreadyRun);
              console.log("failedUnits = %j", failedUnits.length);
              console.log("approvingReviews = %j", approvingReviews.length);
            
            return shouldRun;
  pend:
    name: acceptance testing pending
    runs-on: ubuntu-22.04
    needs: shouldRun
    if: ${{ needs.shouldRun.outputs.shouldRun == 'true'}}
    permissions:
      statuses: write
    steps:
      - name: debug
        run: echo ${{ needs.shouldRun.outputs.shouldRun }}
      - name: pending
        uses: myrotvorets/set-commit-status-action@v2.0.0
        with:
          status: pending
          sha: ${{ github.event.pull_request.head.sha || github.sha }}
  acceptanceTestEthereum:
    runs-on: ubuntu-22.04
    needs: pend
    name: "Acceptance Runner"
    permissions:
      statuses: write
      checks: write
    if: ${{ needs.shouldRun.outputs.shouldRun == 'true'}}
    strategy:
      fail-fast: false
      matrix:
        runner_index: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: get acceptance test report
        uses: dawidd6/action-download-artifact@v2
        with:
          branch: main
          name_is_regexp: true
          name: 'acceptance-node-\d*\d-test-results'
          path: tmp/junit-xml-reports-downloaded
          if_no_artifact_found: true
      - name: setup gradle
        uses: gradle/gradle-build-action@v2
      - name: Split tests
        id: split-tests
        uses: r7kamura/split-tests-by-timings@v0
        with:
          reports: tmp/junit-xml-reports-downloaded
          glob: 'acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/**/*Test.java'
          total: ${{env.total-runners}}
          index: ${{ matrix.runner_index }}
      - name: write out test list
        run: echo "${{ steps.split-tests.outputs.paths }}" >> testList.txt
      - name: format gradle args
        #regex means: first truncate file paths to align with package name, then swap path delimiter with package delimiter,
        #then drop file extension, then insert --tests option between each.
        run: cat testList.txt | sed -e 's@acceptance-tests/tests/src/test/java/@--tests\ @g;s@/@.@g;s/\.java//g'  > gradleArgs.txt
      - name: run acceptance tests
        run: ./gradlew acceptanceTest `cat gradleArgs.txt` -Dorg.gradle.parallel=true -Dorg.gradle.caching=true
      - name: flag failed acceptance tests
        uses: myrotvorets/set-commit-status-action@v2.0.0
        if: failure()
        with:
          status: ${{ job.status }}
          context: acceptance-tests-${{matrix.runner_index}}
          sha: ${{ github.event.pull_request.head.sha || github.sha }}
          description: fail acceptance test batch ${{matrix.runner_index}}
      - name: flag passed unit tests
        uses: myrotvorets/set-commit-status-action@v2.0.0
        if: success()
        with:
          status: ${{ job.status }}
          sha: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: cleanup tempfiles
        run: rm testList.txt gradleArgs.txt
      - name: Upload Acceptance Test Results
        uses: actions/upload-artifact@v3.1.0
        with:
          name: acceptance-node-${{matrix.runner_index}}-test-results
          path: 'acceptance-tests/tests/build/test-results/acceptanceTest/TEST-*.xml'
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: (success() || failure()) # always run even if the build step fails
        with:
          report_paths: 'acceptance-tests/tests/build/test-results/acceptanceTest/TEST-*.xml'
