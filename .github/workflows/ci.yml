name: ci
on:
  push:
    branches: [ main ]
  pull_request:

env:
  GRADLE_OPTS: "-Xmx4g"
  total-runners: 8

jobs:
  compile:
    runs-on: ubuntu-latest
    container: tmio/besu-build:1.0
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Compile
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          arguments: compileJava compileTestJava --scan -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: besu-zip
          path: build/distributions/*.zip
  assemble:
    runs-on: ubuntu-latest
    needs: compile
    container: tmio/besu-build:1.0
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - name: Assemble
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble --scan -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: besu-zip
          path: build/distributions/*.zip
  testWindows:
    runs-on: windows-latest
    needs: assemble
    timeout-minutes: 10
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
      - name: Download zip
        uses: actions/download-artifact@v3
        with:
          name: besu-zip
      - name: test Besu
        run: |
          unzip besu-*.zip -d besu-tmp
          cd besu-tmp
          mv besu-* ../besu
          cd ..
          besu\bin\besu.bat --help
          besu\bin\besu.bat --version
  runner-indexes:
    runs-on: ubuntu-latest
    name: Generate runner indexes
    outputs:
      json: ${{ steps.generate-index-list.outputs.json }}
    steps:
      - id: generate-index-list
        run: |
          MAX_INDEX=$((${{ env.total-runners }}-1))
          INDEX_LIST=$(seq 0 ${MAX_INDEX})
          INDEX_JSON=$(jq --null-input --compact-output '. |= [inputs]' <<< ${INDEX_LIST})
          echo "::set-output name=json::${INDEX_JSON}"

  run-parallel-tests:
    runs-on: ubuntu-latest
    name: "Runner #${{ matrix.runner-index }}: Run test suite in parallel"
    needs:
      - runner-indexes
      - compile
    strategy:
      matrix:
        runner-index: ${{ fromjson(needs.runner-indexes.outputs.json) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Split tests
        id: split-tests
        uses: chaosaffe/split-tests@v1-alpha.1
        with:
            glob: '**/src/test/java'
            split-total: ${{ env.total-runners }}
            split-index: ${{ matrix.runner-index }}
      - name: extract module names
        id: set-modules
        run: echo "::set-output name=tests::$(echo ${{ steps.split-tests.outputs.test-suite }} | sed -e 's:src/test/java:test:g' -e 's|/|:|g')"
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ steps.set-modules.outputs.tests }} --scan
  integration-test:
    runs-on: ubuntu-latest
    needs: compile
    container: tmio/besu-build:1.0
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTest --scan
  javadoc:
    runs-on: ubuntu-latest
    container: tmio/besu-build:1.0
    needs: integration-test
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: javadoc --scan
  compileJmh:
    runs-on: ubuntu-latest
    container: tmio/besu-build:1.0
    needs: integration-test
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: compileJmh --scan
  referenceTestEthereum:
    runs-on: ubuntu-latest
    container: tmio/besu-build:1.0
    needs:
     - integration-test
     - runner-indexes
    if: ${{ github.actor != 'dependabot[bot]' }}
    strategy:
      matrix:
        runner-index: ${{ fromjson(needs.runner-indexes.outputs.json) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: generate ethereum reference tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ethereum:referencetests:blockchainReferenceTests ethereum:referencetests:generalstateReferenceTests ethereum:referencetests:generalstateRegressionReferenceTests --scan
      - name: collect tests
        id: collect-tests
        run: echo "::set-output name=tests::$(find ethereum/referencetests/build/generated/sources/reference-test -name '*.java' | sed -e 's/^.*java\///' -e 's@/@.@g' -e 's/\.java//' -e 's/^/--tests /' | xargs echo)"
      - name: Split tests
        id: split-tests
        uses: chaosaffe/split-tests@v1-alpha.1
        with:
          glob: '**/src/test/java'
          split-total: ${{ env.total-runners }}
          split-index: ${{ matrix.runner-index }}
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ethereum:referenceTests:referenceTests ${{ steps.collect-tests.outputs.tests }} --scan
  referenceTestQbft:
    runs-on: ubuntu-latest
    container: tmio/besu-build:1.0
    needs: integration-test
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: qbft reference tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: consensus:qbft:referencetests --scan
  acceptanceTests:
    runs-on: ubuntu-latest
    needs: integration-test
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER_RW }}
          password: ${{ secrets.DOCKER_PASSWORD_RW }}
      - name: pull test image
        run: docker pull quorumengineering/acctests:latest
      - name: ethereum reference tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: acceptanceTests --scan