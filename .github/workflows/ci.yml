name: ci
on:
  workflow_call:


env:
  GRADLE_OPTS: "-Xmx6g -Dorg.gradle.daemon=false"
  total-runners: 6

jobs:
  javadoc_17:
    runs-on: [ self-hosted ]
    needs: compile
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Restore classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - name: javadoc (JDK 17)
        run: ./gradlew --no-daemon javadoc
  assemble:
    runs-on: [self-hosted, Linux, X64]
    needs: compile
    timeout-minutes: 30
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: export runner UID
        run: echo "runner_uid=$UID" >> $GITHUB_ENV
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Restore classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - name: Assemble
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble -Dorg.gradle.parallel=true
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: besu-zip
          path: build/distributions/*.zip
      - name: Correct Ownership in GITHUB_WORKSPACE directory
        uses: peter-murray/reset-workspace-ownership-action@v1
        with:
          user_id: ${{env.runner_uid}}
  testWindows:
    runs-on: windows-2022
    needs: assemble
    timeout-minutes: 10
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
      - name: Download zip
        uses: actions/download-artifact@v3
        with:
          name: besu-zip
      - name: test Besu
        run: |
          unzip besu-*.zip -d besu-tmp
          cd besu-tmp
          mv besu-* ../besu
          cd ..
          besu\bin\besu.bat --help
          besu\bin\besu.bat --version
  runner-indexes:
    runs-on: ubuntu-22.04
    name: Generate runner indexes
    outputs:
      json: ${{ steps.generate-index-list.outputs.json }}
    steps:
      - id: generate-index-list
        run: |
          MAX_INDEX=$((${{ env.total-runners }}-1))
          INDEX_LIST=$(seq 0 ${MAX_INDEX})
          INDEX_JSON=$(jq --null-input --compact-output '. |= [inputs]' <<< ${INDEX_LIST})
          echo "::set-output name=json::${INDEX_JSON}"
  run-tests:
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 60
    name: "Run test suite"
    needs:
      - compile
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Restore classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: junit-test-results
          path: '**/build/test-results/test/TEST-*.xml'
          retention-days: 1
      - name: Upload Test Report html
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: junit-test-results-html
          path: '**/build/reports/*'
          retention-days: 1
  integration-test:
    runs-on: [self-hosted, Linux, X64]
    needs: compile
    timeout-minutes: 30
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: export runner UID
        run: echo "runner_uid=$UID" >> $GITHUB_ENV
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Restore classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTest
      - name: Correct Ownership in GITHUB_WORKSPACE directory
        uses: peter-murray/reset-workspace-ownership-action@v1
        with:
          user_id: ${{ env.runner_uid }}
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: junit-integration-test-results
          path: '**/build/test-results/integrationTest/TEST-*.xml'
          retention-days: 1
