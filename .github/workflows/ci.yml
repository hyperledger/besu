name: ci
on:
  push:
    branches: [ main ]
  pull_request:

env:
  GRADLE_OPTS: "-Xmx4g -Dorg.gradle.daemon=false"
  total-runners: 8

jobs:
  compile:
    runs-on: ubuntu-22.04
    container: hyperledger/besu-build:1.0
    timeout-minutes: 30
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Compile
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          arguments: compileJava compileTestJava --scan -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
  assemble:
    runs-on: ubuntu-22.04
    needs: compile
    container: hyperledger/besu-build:1.0
    timeout-minutes: 30
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - name: Assemble
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble --scan -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: besu-zip
          path: build/distributions/*.zip
  testWindows:
    runs-on: windows-2022
    needs: assemble
    timeout-minutes: 10
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 17
      - name: Download zip
        uses: actions/download-artifact@v3
        with:
          name: besu-zip
      - name: test Besu
        run: |
          unzip besu-*.zip -d besu-tmp
          cd besu-tmp
          mv besu-* ../besu
          cd ..
          besu\bin\besu.bat --help
          besu\bin\besu.bat --version
  runner-indexes:
    runs-on: ubuntu-22.04
    name: Generate runner indexes
    outputs:
      json: ${{ steps.generate-index-list.outputs.json }}
    steps:
      - id: generate-index-list
        run: |
          MAX_INDEX=$((${{ env.total-runners }}-1))
          INDEX_LIST=$(seq 0 ${MAX_INDEX})
          INDEX_JSON=$(jq --null-input --compact-output '. |= [inputs]' <<< ${INDEX_LIST})
          echo "::set-output name=json::${INDEX_JSON}"
  run-parallel-tests:
    runs-on: ubuntu-22.04
    container: hyperledger/besu-build:1.0
    timeout-minutes: 30
    name: "Runner #${{ matrix.runner-index }}: Run test suite in parallel"
    needs:
      - runner-indexes
      - compile
    strategy:
      matrix:
        runner-index: ${{ fromjson(needs.runner-indexes.outputs.json) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Split tests
        id: split-tests
        uses: chaosaffe/split-tests@v1-alpha.1
        with:
            glob: '**/src/test/java'
            split-total: ${{ env.total-runners }}
            split-index: ${{ matrix.runner-index }}
      - name: extract module names
        id: set-modules
        run: echo "::set-output name=tests::$(echo ${{ steps.split-tests.outputs.test-suite }} | sed -e 's:src/test/java:test:g' -e 's|/|:|g')"
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ steps.set-modules.outputs.tests }} --scan
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: junit-test-${{ matrix.runner-index }}-results
          path: '**/build/test-results/test/TEST-*.xml'
          retention-days: 1
  integration-test:
    runs-on: ubuntu-22.04
    needs: compile
    timeout-minutes: 30
    container: hyperledger/besu-build:1.0
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTest --scan
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: junit-integration-test-results
          path: '**/build/test-results/integrationTest/TEST-*.xml'
          retention-days: 1
# Disabled until javadoc warnings have been resolved.
#  javadoc:
#    runs-on: ubuntu-22.04
#    container: hyperledger/besu-build:1.0
#    needs: compile
#    timeout-minutes: 30
#    if: ${{ github.actor != 'dependabot[bot]' }}
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v3
#      - name: Set up Java
#        uses: actions/setup-java@v2
#        with:
#          distribution: adopt
#          java-version: 17
#          cache: gradle
#      - name: Cache classes
#        uses: actions/cache@v3
#        with:
#          path: "**/*.class"
#          key: ${{ runner.os }}-build-${{ github.sha }}
#      - name: javadoc
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: javadoc --scan
  compileJmh:
    runs-on: ubuntu-22.04
    container: hyperledger/besu-build:1.0
    needs: compile
    timeout-minutes: 30
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: compileJmh --scan
  prepareReferenceTestEthereum:
    runs-on: ubuntu-22.04
    container: hyperledger/besu-build:1.0
    needs: compile
    timeout-minutes: 30
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: generate ethereum reference tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ethereum:referencetests:blockchainReferenceTests ethereum:referencetests:generalstateReferenceTests ethereum:referencetests:generalstateRegressionReferenceTests --scan
      - name: Cache reference tests
        uses: actions/cache@v3
        with:
          path: "ethereum/referencetests/build/generated/sources/reference-test/**"
          key: ${{ runner.os }}-reftests-${{ github.sha }}
  referenceTestEthereum:
    runs-on: ubuntu-22.04
    container: hyperledger/besu-build:1.0
    needs:
     - prepareReferenceTestEthereum
     - runner-indexes
    timeout-minutes: 30
    if: ${{ github.actor != 'dependabot[bot]' }}
    strategy:
      matrix:
        runner-index: ${{ fromjson(needs.runner-indexes.outputs.json) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Cache reference tests
        uses: actions/cache@v3
        with:
          path: "ethereum/referencetests/build/generated/sources/reference-test/**"
          key: ${{ runner.os }}-reftests-${{ github.sha }}
      - name: Split tests
        id: split-tests
        uses: chaosaffe/split-tests@v1-alpha.1
        with:
          glob: 'ethereum/referencetests/build/generated/sources/reference-test/**/*.java'
          split-total: ${{ env.total-runners }}
          split-index: ${{ matrix.runner-index }}
      - name: run reference tests
        run: ./gradlew ethereum:referenceTests:referenceTests $(echo ${{ steps.split-tests.outputs.test-suite }} | sed -e 's/^.*java\///' -e 's@/@.@g' -e 's/\.java//' -e 's/^/--tests /') --scan
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: junit-reference-${{ matrix.runner-index }}-test-results
          path: '**/build/test-results/test/TEST-*.xml'
          retention-days: 1
  referenceTestQbft:
    runs-on: ubuntu-22.04
    container: hyperledger/besu-build:1.0
    needs: compile
    timeout-minutes: 30
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 17
          cache: gradle
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: qbft reference tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: consensus:qbft:referencetests --scan
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: junit-qbft-reference-test-results
          path: '**/build/test-results/referenceTests/TEST-*.xml'
          retention-days: 1
  run-parallel-acceptance-tests:
    runs-on: ubuntu-22.04
    container: hyperledger/besu-build:1.0
    timeout-minutes: 30
    name: "Runner #${{ matrix.runner-index }}: Run acceptance test suite in parallel"
    needs:
      - runner-indexes
      - compile
    if: ${{ github.actor != 'dependabot[bot]' }}
    strategy:
      matrix:
        runner-index: ${{ fromjson(needs.runner-indexes.outputs.json) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Cache classes
        uses: actions/cache@v3
        with:
          path: "**/*.class"
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: ethereum acceptance tests
        uses: gradle/gradle-build-action@v2
        env:
          SHARD_COUNT: "${{ env.total-runners }}"
          SHARD_INDEX: "${{ matrix.runner-index }}"
        with:
          arguments: acceptanceTest --scan
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: junit-acceptance-test-results
          path: '**/build/test-results/acceptanceTest/TEST-*.xml'
          retention-days: 1