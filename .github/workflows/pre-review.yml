name: pre-review

on:
  pull_request:
  workflow_dispatch:

permissions:
  statuses: write
  checks: write

env:
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

jobs:
  pend:
    name: unit testing pending
    runs-on: ubuntu-22.04
    steps:
      - name: pending
        uses: myrotvorets/set-commit-status-action@v2.0.0
        with:
          status: pending
  repolint:
    name: "Repository Linting"
    runs-on: ubuntu-22.04
    container: ghcr.io/todogroup/repolinter:v0.11.2
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Lint Repo
      run: bundle exec /app/bin/repolinter.js --rulesetUrl https://raw.githubusercontent.com/hyperledger-labs/hyperledger-community-management-tools/main/repo_structure/repolint.json --format markdown
  gradle-wrapper:
    name: "Gradle Wrapper Validation"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v1.1.0
  spotless:
    runs-on: ubuntu-22.04
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.10.0
      - name: run spotless
        run: ./gradlew spotlessCheck -Dorg.gradle.parallel=true -Dorg.gradle.caching=true
  compile:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: [spotless, gradle-wrapper, repolint]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.10.0
      - name: Gradle Compile
        run: ./gradlew build -x test -x spotlessCheck -Dorg.gradle.parallel=true -Dorg.gradle.caching=true
  unitTests:
    env:
        GRADLEW_UNIT_TEST_ARGS: ${{matrix.gradle_args}}
    runs-on: ubuntu-22.04
    needs: [ compile ]
    permissions:
      checks: write
      statuses: write
    strategy:
      fail-fast: false
      matrix:
        gradle_args:
          - "test -x besu:test -x consensus:test -x crypto:test -x ethereum:eth:test -x ethereum:api:test -x ethereum:core:test"
          - "besu:test consensus:test crypto:test"
          - "ethereum:api:testBonsai"
          - "ethereum:api:testForest"
          - "ethereum:api:testRemainder"
          - "ethereum:core:test"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.10.0
      - name: run unit tests
        id: unitTest
        run: ./gradlew $GRADLEW_UNIT_TEST_ARGS -Dorg.gradle.parallel=true -Dorg.gradle.caching=true
      - name: flag failed unit tests
        uses: myrotvorets/set-commit-status-action@v2.0.0
        if: failure()
        with:
          status: ${{ job.status }}
          context: unit-tests-${{matrix.gradle_args}}
          description: ${{matrix.gradle_args}}
      - name: flag passed unit tests
        uses: myrotvorets/set-commit-status-action@v2.0.0
        if: success()
        with:
          status: ${{ job.status }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the build step fails
        with:
          report_paths: '**/test-results/test/TEST-*.xml'
          annotate_only: true
  acceptanceTest:
    needs: unitTests
    uses: ./.github/workflows/acceptance-tests.yml
  integrationTest:
    needs: unitTests
    uses: ./.github/workflows/integration-tests.yml
  referenceTest:
    needs: unitTests
    uses: ./.github/workflows/reference-tests.yml
