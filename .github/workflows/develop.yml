name: docker develop build test and publish

on:
  push:
    branches:
      - main
      - dockertest
env:
  registry: docker.io

jobs:
  init:
    runs-on: ubuntu-22.04
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
      build_target_name: ${{ steps.vars.outputs.build_target_name }}
    steps:    
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Set vars 
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          # Get the current date and time in the format YY.MM
          DATE_TIME=$(date +"%y.%-m")
          # Get the short SHA of the merge commit
          SHORT_SHA=${GITHUB_SHA::7}
          # Construct the build target name
          BUILD_TARGET_NAME="${DATE_TIME}-develop-${SHORT_SHA}"
          echo "build_target_name=${BUILD_TARGET_NAME}" >> $GITHUB_OUTPUT

  # hadolint
  dockerfileLint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Set up Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00
        with:
          distribution: temurin
          java-version: 21
      - name: setup gradle
        uses: gradle/actions/setup-gradle@9e899d11ad247ec76be7a60bc1cf9d3abbb9e7f1
        with:
          cache-disabled: true
      - name: hadoLint
        run: docker run --rm -i hadolint/hadolint < docker/Dockerfile

  # build dockerimage and test with goss - verify sane config in the dockerfile
  buildTestDocker:
    needs: dockerfileLint
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-22.04
          - besu-arm64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Prepare
        id: prep
        run: |
          platform=${{ matrix.platform }}
          if [ "$platform" = 'ubuntu-22.04' ]; then 
            echo "PLATFORM_PAIR=linux-amd64" >> $GITHUB_OUTPUT
            echo "ARCH=amd64" >> $GITHUB_OUTPUT
          else
            echo "PLATFORM_PAIR=linux-arm64" >> $GITHUB_OUTPUT
            echo "ARCH=arm64" >> $GITHUB_OUTPUT
          fi

      # - name: Checkout Repo
      #   uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      # - name: Set up Java
      #   uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00
      #   with:
      #     distribution: temurin
      #     java-version: 21
      # - name: setup gradle
      #   uses: gradle/actions/setup-gradle@9e899d11ad247ec76be7a60bc1cf9d3abbb9e7f1
      #   with:
      #     cache-disabled: true
      # - name: install goss
      #   run: |
      #     mkdir -p docker/reports
      #     curl -L https://github.com/aelsabbahy/goss/releases/download/v0.4.4/goss-${{ steps.prep.outputs.PLATFORM_PAIR }} -o ./docker/tests/goss-${{ steps.prep.outputs.PLATFORM_PAIR }}
      # - name: login to ${{ env.registry }}
      #   uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      #   with:
      #     registry: ${{ env.registry }}
      #     username: ${{ secrets.DOCKER_USER_RW }}
      #     password: ${{ secrets.DOCKER_PASSWORD_RW }}
      # - name: build and test docker
      #   uses: gradle/actions/setup-gradle@9e899d11ad247ec76be7a60bc1cf9d3abbb9e7f1
      #   env:
      #     architecture: ${{ steps.prep.outputs.ARCH }}
      #   with:
      #     cache-disabled: true
      #     arguments: testDocker -PdockerOrgName=${{ env.registry }}/${{ secrets.DOCKER_ORG }} -Pversion=${{ env.BUILD_TARGET_NAME}} -Prelease.releaseVersion=develop
      # - name: publish
      #   env:
      #     architecture: ${{ steps.prep.outputs.ARCH }}
      #   run: ./gradlew --no-daemon dockerUpload -PdockerOrgName=${{ env.registry }}/${{ secrets.DOCKER_ORG }} -Pversion=${{ env.BUILD_TARGET_NAME }} -Prelease.releaseVersion=develop

  # publishDockerManifest:
  #   needs: [init,buildTestDocker]
  #   runs-on: ubuntu-22.04
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
  #     - name: Set up Java
  #       uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00
  #       with:
  #         distribution: temurin
  #         java-version: 21
  #     - name: setup gradle
  #       uses: gradle/actions/setup-gradle@9e899d11ad247ec76be7a60bc1cf9d3abbb9e7f1
  #       with:
  #         cache-disabled: true
  #     - name: login to ${{ env.registry }}
  #       uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
  #       with:
  #         registry: ${{ env.registry }}
  #         username: ${{ secrets.DOCKER_USER_RW }}
  #         password: ${{ secrets.DOCKER_PASSWORD_RW }}
  #     - name: multi-arch docker
  #       run: ./gradlew manifestDocker -PdockerOrgName=${{ env.registry }}/${{ secrets.DOCKER_ORG }} -Pversion=${{ needs.init.outputs.build_target_name }} -Prelease.releaseVersion=develop
        
  docker-verify:
    needs: [init]
    env:
      CONTAINER_NAME: besu-check
    runs-on: ubuntu-22.04
    timeout-minutes: 4
    steps:
      - name: Start container
        run: |
          env
          docker run -d --name ${{ env.CONTAINER_NAME }} ${{ secrets.DOCKER_ORG }}/besu:${{ needs.init.outputs.build_target_name }}

      - name: Wait for container to initialize
        run: sleep 10

      - name: Verify besu container
        run: bash .github/workflows/BesuContainerVerify.sh
        env:
          TAG: ${{ needs.init.outputs.build_target_name }}
          VERSION: ${{ needs.init.outputs.build_target_name }}
          CHECK_LATEST: false

      - name: Stop container
        run: docker stop ${{ env.CONTAINER_NAME }}

